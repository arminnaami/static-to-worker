{"title":"httpsrv - 簡單的本機 http 伺服器","slug":"httpsrv","date":"2017-12-16T07:38:31.000Z","updated":"2019-08-16T11:14:47.591Z","comments":true,"path":"api/articles/httpsrv.json","excerpt":"httpsrv 是一個非常簡單的小型伺服器，功用很像python2的SimpleHTTPServer<br>可以透過輸入簡單的一行指令，將某個資料夾作為暫時的 http server，然後就能在瀏覽器上瀏覽","covers":["example.png"],"content":"<p><a href=\"https://www.npmjs.com/package/httpsrv\" target=\"_blank\" rel=\"noopener\">httpsrv</a> 是一個非常簡單的小型伺服器，功用很像<code>python2</code>的<code>SimpleHTTPServer</code><br>可以透過輸入簡單的一行指令，將某個資料夾作為暫時的 http server，然後就能在瀏覽器上瀏覽</p>\n<a id=\"more\"></a>\n\n<h1 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g httpsrv</span><br><span class=\"line\"><span class=\"comment\">#或 yarn global add httpsrv</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使用教學\"><a href=\"#使用教學\" class=\"headerlink\" title=\"使用教學\"></a>使用教學</h1><h2 id=\"basic\"><a href=\"#basic\" class=\"headerlink\" title=\"basic\"></a>basic</h2><p>先使用<code>cd</code>到你想要的資料夾之後輸入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">httpsrv . <span class=\"comment\"># . 代表當前資料夾</span></span><br></pre></td></tr></table></figure>\n\n<p>然後打開瀏覽器到 <a href=\"localhost:3333\" target=\"_blank\" rel=\"noopener\">localhost:3333</a> 應該能看到目前這個目錄下的檔案列表<br><img src=\"example.png\" alt=\"blog hexo folder\"><br><em>這張圖片是這個部落格的 hexo 資料夾</em></p>\n<h1 id=\"port-amp-log\"><a href=\"#port-amp-log\" class=\"headerlink\" title=\"port&amp;log\"></a>port&amp;log</h1><p>例如這個可以在 <a href=\"localhost:8888\" target=\"_blank\" rel=\"noopener\">localhost:8888</a> 上開啟一個伺服器，並把所有的 request 給記錄在 console 中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">httpsrv . -p 8888 -l</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他選項\"><a href=\"#其他選項\" class=\"headerlink\" title=\"其他選項\"></a>其他選項</h2><p>建議直接到 <a href=\"https://github.com/maple3142/httpsrv/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">maple3142/httpsrv</a> 看更完整的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: httpsrv &lt;basedir&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  --help           Show help                                           [boolean]</span><br><span class=\"line\">  --version        Show version number                                 [boolean]</span><br><span class=\"line\">  --port, -p       Port to listen                       [number] [default: 3333]</span><br><span class=\"line\">  --log, -l        Enable logger                                       [boolean]</span><br><span class=\"line\">  --cors, -c       Access-Control-Allow-Origin header                   [string]</span><br><span class=\"line\">  --fallback, -f   A file will be send when 404, useful in SPA          [string]</span><br><span class=\"line\">  --indexhtml, -i  Try to show index.html if exists                    [boolean]</span><br><span class=\"line\"></span><br><span class=\"line\">Examples:</span><br><span class=\"line\">  httpsrv . -p 8888  Start server on port 8888</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"進階使用\"><a href=\"#進階使用\" class=\"headerlink\" title=\"進階使用\"></a>進階使用</h1><h2 id=\"blog\"><a href=\"#blog\" class=\"headerlink\" title=\"blog\"></a>blog</h2><p>這還可以拿來測試 hexo 所建立出來的網站拿目前這個部落格來做範例 <a href=\"https://github.com/maple3142/Blog\" target=\"_blank\" rel=\"noopener\">GitHub repo</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/maple3142/Blog.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run build <span class=\"comment\">#一般來說是hexo generate, 不過我有把build增加一些東西(例如minify)</span></span><br><span class=\"line\">httpsrv public -i -f 404.html</span><br></pre></td></tr></table></figure>\n\n<p>最後一行的<code>-i</code>是自動在目錄底下偵測有沒有<code>index.html</code>，有就傳送出來<br><code>-f 404.html</code>是會在找不到檔案(404)時傳送的檔案，還有這邊要注意的是<code>404.html</code>不能打成<code>public/404.html</code></p>\n<h2 id=\"WynnStats\"><a href=\"#WynnStats\" class=\"headerlink\" title=\"WynnStats\"></a>WynnStats</h2><p><a href=\"/2017/10/27/wynnstats/\">WynnStats</a> 是我之前弄的一個 SPA 的練習，打算用它來做為範例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/maple3142/WynnStats.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> WynnStats</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run build</span><br><span class=\"line\">httpsrv dist -i -f index.html</span><br></pre></td></tr></table></figure>\n\n<p>接下來一樣是開啟 <a href=\"localhost:3333\" target=\"_blank\" rel=\"noopener\">localhost:3333</a>，然後隨便點個連結然後 F5 會發現功能都很正常最後一行看起來和上面幾乎一樣，主要是<code>-f index.html</code>的作用因為 SPA 網站只會有一個<code>index.html</code>，在 404 時就傳送<code>index.html</code>就好了， route 的邏輯是在裡面用 javascript 判斷的</p>\n","more":"<h1 id=\"安裝\"><a href=\"#安裝\" class=\"headerlink\" title=\"安裝\"></a>安裝</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g httpsrv</span><br><span class=\"line\"><span class=\"comment\">#或 yarn global add httpsrv</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"使用教學\"><a href=\"#使用教學\" class=\"headerlink\" title=\"使用教學\"></a>使用教學</h1><h2 id=\"basic\"><a href=\"#basic\" class=\"headerlink\" title=\"basic\"></a>basic</h2><p>先使用<code>cd</code>到你想要的資料夾之後輸入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">httpsrv . <span class=\"comment\"># . 代表當前資料夾</span></span><br></pre></td></tr></table></figure>\n\n<p>然後打開瀏覽器到 <a href=\"localhost:3333\" target=\"_blank\" rel=\"noopener\">localhost:3333</a> 應該能看到目前這個目錄下的檔案列表<br><img src=\"example.png\" alt=\"blog hexo folder\"><br><em>這張圖片是這個部落格的 hexo 資料夾</em></p>\n<h1 id=\"port-amp-log\"><a href=\"#port-amp-log\" class=\"headerlink\" title=\"port&amp;log\"></a>port&amp;log</h1><p>例如這個可以在 <a href=\"localhost:8888\" target=\"_blank\" rel=\"noopener\">localhost:8888</a> 上開啟一個伺服器，並把所有的 request 給記錄在 console 中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">httpsrv . -p 8888 -l</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"其他選項\"><a href=\"#其他選項\" class=\"headerlink\" title=\"其他選項\"></a>其他選項</h2><p>建議直接到 <a href=\"https://github.com/maple3142/httpsrv/blob/master/README.md\" target=\"_blank\" rel=\"noopener\">maple3142/httpsrv</a> 看更完整的</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Usage: httpsrv &lt;basedir&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  --help           Show help                                           [boolean]</span><br><span class=\"line\">  --version        Show version number                                 [boolean]</span><br><span class=\"line\">  --port, -p       Port to listen                       [number] [default: 3333]</span><br><span class=\"line\">  --log, -l        Enable logger                                       [boolean]</span><br><span class=\"line\">  --cors, -c       Access-Control-Allow-Origin header                   [string]</span><br><span class=\"line\">  --fallback, -f   A file will be send when 404, useful in SPA          [string]</span><br><span class=\"line\">  --indexhtml, -i  Try to show index.html if exists                    [boolean]</span><br><span class=\"line\"></span><br><span class=\"line\">Examples:</span><br><span class=\"line\">  httpsrv . -p 8888  Start server on port 8888</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"進階使用\"><a href=\"#進階使用\" class=\"headerlink\" title=\"進階使用\"></a>進階使用</h1><h2 id=\"blog\"><a href=\"#blog\" class=\"headerlink\" title=\"blog\"></a>blog</h2><p>這還可以拿來測試 hexo 所建立出來的網站拿目前這個部落格來做範例 <a href=\"https://github.com/maple3142/Blog\" target=\"_blank\" rel=\"noopener\">GitHub repo</a></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/maple3142/Blog.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> Blog</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run build <span class=\"comment\">#一般來說是hexo generate, 不過我有把build增加一些東西(例如minify)</span></span><br><span class=\"line\">httpsrv public -i -f 404.html</span><br></pre></td></tr></table></figure>\n\n<p>最後一行的<code>-i</code>是自動在目錄底下偵測有沒有<code>index.html</code>，有就傳送出來<br><code>-f 404.html</code>是會在找不到檔案(404)時傳送的檔案，還有這邊要注意的是<code>404.html</code>不能打成<code>public/404.html</code></p>\n<h2 id=\"WynnStats\"><a href=\"#WynnStats\" class=\"headerlink\" title=\"WynnStats\"></a>WynnStats</h2><p><a href=\"/2017/10/27/wynnstats/\">WynnStats</a> 是我之前弄的一個 SPA 的練習，打算用它來做為範例</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/maple3142/WynnStats.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> WynnStats</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm run build</span><br><span class=\"line\">httpsrv dist -i -f index.html</span><br></pre></td></tr></table></figure>\n\n<p>接下來一樣是開啟 <a href=\"localhost:3333\" target=\"_blank\" rel=\"noopener\">localhost:3333</a>，然後隨便點個連結然後 F5 會發現功能都很正常最後一行看起來和上面幾乎一樣，主要是<code>-f index.html</code>的作用因為 SPA 網站只會有一個<code>index.html</code>，在 404 時就傳送<code>index.html</code>就好了， route 的邏輯是在裡面用 javascript 判斷的</p>","categories":[{"name":"專案","path":"api/categories/專案.json"}],"tags":[{"name":"javascript","path":"api/tags/javascript.json"}]}